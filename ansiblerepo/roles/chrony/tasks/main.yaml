---
- name: "Get container list"
  command: "buildah images --json"
  register: buildahoutput
  changed_when: False

- name: "Create the chrony container"
  block:
  - name: "Build the chrony container if it doesn't exist"
    ansible.builtin.command: "buildah build-using-dockerfile -t chrony {{ role_path }}/containers/chronycontainer/"  
  - name: "Push the chrony container into the local registry"
    ansible.builtin.command: "buildah push --tls-verify=false localhost/chrony 192.168.56.2:5000/chrony"
  when: "not buildahoutput.stdout | from_json | json_query('contains([].names[], `localhost/chrony:latest`)')"

- name: "Create the chrony.conf configmap"
  kubernetes.core.k8s:
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    definition: "{{ lookup('template', 'chrony-conf-configmap.yaml.j2') | from_yaml }}"
    state: present

- name: "Create the chronyd deployment object"
  kubernetes.core.k8s:
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
 #   src: "/home/vagrant/vagrant-k3s-hpccluster/kubeconfig/defs/chronyd-deployment.yaml"
    definition: "{{ lookup('template', 'defs/chronyd-deployment.yaml') | from_yaml }}"
    state: present

- name: "Create the chronyd service object"
  kubernetes.core.k8s:
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
#    src: "/home/vagrant/vagrant-k3s-hpccluster/kubeconfig/defs/chronyd-service.yaml"
    definition: "{{ lookup('template', 'defs/chronyd-service.yaml') | from_yaml }}"
    state: present
